// <auto-generated />
using System;
using BookSellingApplication_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookSellingApplication_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230827022736_addingRelations")]
    partial class addingRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookSellingApplication_Model.Models.Admin", b =>
                {
                    b.Property<int>("Admin_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Book", b =>
                {
                    b.Property<int>("Book_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Book_Id"));

                    b.Property<int>("Available_Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("CatObjCategory_Id")
                        .HasColumnType("int");

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Book_Id");

                    b.HasIndex("CatObjCategory_Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Book_Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_Id"));

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category_Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Category_Id = 1,
                            Category_Name = "Historic"
                        },
                        new
                        {
                            Category_Id = 2,
                            Category_Name = "Thriller"
                        },
                        new
                        {
                            Category_Id = 3,
                            Category_Name = "Mystery"
                        },
                        new
                        {
                            Category_Id = 4,
                            Category_Name = "Fiction"
                        },
                        new
                        {
                            Category_Id = 5,
                            Category_Name = "Action"
                        },
                        new
                        {
                            Category_Id = 6,
                            Category_Name = "Action & Adventure"
                        },
                        new
                        {
                            Category_Id = 7,
                            Category_Name = "Comics"
                        },
                        new
                        {
                            Category_Id = 8,
                            Category_Name = "Fantasy"
                        },
                        new
                        {
                            Category_Id = 9,
                            Category_Name = "Horror"
                        },
                        new
                        {
                            Category_Id = 10,
                            Category_Name = "Romantic"
                        },
                        new
                        {
                            Category_Id = 11,
                            Category_Name = "Biography"
                        },
                        new
                        {
                            Category_Id = 12,
                            Category_Name = "Science"
                        });
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Customer", b =>
                {
                    b.Property<int>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Customer_Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Purchase", b =>
                {
                    b.Property<int>("Purchase_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Purchase_Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("Purchase_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("purchasing_CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Purchase_Id");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Book", b =>
                {
                    b.HasOne("BookSellingApplication_Model.Models.Category", "CatObj")
                        .WithMany("Books_C")
                        .HasForeignKey("CatObjCategory_Id");

                    b.Navigation("CatObj");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Cart", b =>
                {
                    b.HasOne("BookSellingApplication_Model.Models.Book", "BookObj")
                        .WithMany("CartItems")
                        .HasForeignKey("Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookSellingApplication_Model.Models.Customer", "CustomerObj")
                        .WithMany("cartCustomers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookObj");

                    b.Navigation("CustomerObj");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Book", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Category", b =>
                {
                    b.Navigation("Books_C");
                });

            modelBuilder.Entity("BookSellingApplication_Model.Models.Customer", b =>
                {
                    b.Navigation("cartCustomers");
                });
#pragma warning restore 612, 618
        }
    }
}
